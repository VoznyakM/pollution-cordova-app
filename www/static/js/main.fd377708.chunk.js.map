{"version":3,"sources":["services/covid.service.js","components/chart/chart.js","components/daily-stats/daily-stats.js","components/map/map.js","components/settings/settings.js","components/help/help.js","components/report/report.js","components/list/list.js","components/sociallist/sociallist.js","components/app-bar/app-bar.js","components/app/app.js","serviceWorker.js","index.js"],"names":["covidService","this","_apiBase","process","url","Date","toISOString","split","fetch","res","json","now","MyChart","props","state","load_vol_chart","volume_chart_data","updateStats","getStats","then","stats","setState","label","data","map","vol","x","parse","date","y","cases","deaths","recovered","style","height","width","series","showPoints","axes","primary","type","position","tooltip","Component","DailyStats","loading","getTodayStats","getYesterdayStats","ycases","ydeaths","yrecovered","CircularProgress","Paper","variant","Typography","component","padding","fontSize","parseFloat","toFixed","withScriptjs","withGoogleMap","iconMarker","window","google","maps","MarkerImage","Size","history","useHistory","defaultZoom","zoom","defaultCenter","center","onClick","evt","push","pathname","lat","latLng","lng","latitude","longitude","sanitizers","sanitizer","key","id","icon","title","places","place","circle","radius","options","Settings","myChangeHandler","event","username","target","value","useStyles","makeStyles","table","minWidth","DenseTable","TableContainer","a","method","headers","body","JSON","stringify","alert","useState","handleOnLoad","record_id","response","console","log","location","useLocation","useEffect","row","description","socialTypes","validate","name","rows","cols","placeholder","address","phone","level","disabled","checked","handleOnClick","BasisPaginationGrid","getStatus","val","fetchData","areas","volume_map_data","status_id","columns","field","headerName","sortable","disableClickEventBubbling","renderCell","params","Button","fields","api","getAllColumns","c","filter","thisRow","forEach","f","getValue","pageSize","rowsPerPageOptions","pagination","theme","root","maxWidth","backgroundColor","palette","background","paper","inline","display","AlignItemsList","classes","author","avatar","source","orig_date","List","className","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","secondary","Fragment","color","desc","Divider","Red","Orange","Yellow","Green","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","flexGrow","contentShift","ListItemLink","to","CustomLink","React","useMemo","forwardRef","linkProps","ref","button","ListItemIcon","MyAppBar","useTheme","open","setOpen","status","setStatus","setSanitizer","handleDrawerClose","usePosition","strokeColor","fetchSanitizer","volume_map_sanitizer","initData","response_orange","orange","status_name","status_link","link","GOOGLE_MAP_KEY","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","anchor","direction","Alert","severity","AlertTitle","path","googleMapURL","loadingElement","containerElement","mapElement","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fd377708.chunk.js","sourcesContent":["export default class covidService {\r\n\r\n  constructor() {\r\n    //this._apiBase = 'http://185.69.153.46:4000';\r\n    this._apiBase = process.env.REACT_APP_BACKEND_API;\r\n     // 'http://localhost:3000';\r\n     // this._apiBase = 'http://ec2-54-80-100-248.compute-1.amazonaws.com:3000';\r\n  }\r\n\r\n  async getTodayStats(url = '/stats/' + new Date().toISOString().split('T')[0]) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    // console.log(res)\r\n    return await res.json();\r\n  }\r\n\r\n  async getYesterdayStats(url = '/stats/' + new Date(Date.now() - 86400000).toISOString().split('T')[0]) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    // console.log(res)\r\n    return await res.json();\r\n  }\r\n\r\n  async getStats(url = '/stats') {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return await res.json();\r\n  }\r\n\r\n  async getMap(url = '/area') {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return await res.json();\r\n  }\r\n\r\n  async getStatus(url = '/setting/status_id') {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return await res.json();\r\n  } \r\n  \r\n  async postProblem(url = '/problem') {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return await res.json();\r\n  }   \r\n}","import React, { Component } from \"react\";\r\nimport { Chart } from 'react-charts'\r\nimport covidService from '../../services/covid.service';\r\n\r\nexport default class MyChart extends Component {\r\n  covidService = new covidService();\r\n  \r\n  state = {\r\n    load_vol_chart: true,\r\n    volume_chart_data: []\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateStats();\r\n  }\r\n\r\n  updateStats() {\r\n    this.covidService.getStats()\r\n      .then((stats) => {\r\n        this.setState({\r\n          volume_chart_data: [\r\n            {\r\n              label: \"Зафіксовано\",\r\n              data: stats.map(vol => ({\r\n                x: Date.parse(vol.date),\r\n                y: vol.cases\r\n              }))\r\n            },\r\n            {\r\n              label: \"Повідомлено\",\r\n              data: stats.map(vol => ({\r\n                x: Date.parse(vol.date),\r\n                y: vol.deaths\r\n              }))\r\n            },\r\n            {\r\n              label: \"Соцмережі\",\r\n              data: stats.map(vol => ({\r\n                x: Date.parse(vol.date),\r\n                y: vol.recovered\r\n              }))\r\n            }\r\n          ]\r\n        })\r\n      });\r\n  }\r\n      \r\n  render() {\r\n  \r\n      return (\r\n        <>\r\n        <div style={{ height: '65vh', width: '100%' }} >\r\n            <Chart data={this.state.volume_chart_data}  \r\n            series={ {showPoints: false} } \r\n            axes={[\r\n              { primary: true, type: 'time', position: 'bottom' },\r\n              { type: 'linear', position: 'left' }\r\n            ]} \r\n          tooltip />\r\n        </div>    \r\n        </>\r\n      )\r\n      \r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport MyChart from '../chart/chart'\r\nimport covidService from '../../services/covid.service';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n\r\nexport default class DailyStats extends Component {\r\n  \r\n  covidService = new covidService();\r\n\r\n  state = {\r\n    cases: null,\r\n    deaths: null,\r\n    recovered: null,\r\n    loading: true\r\n  };\r\n  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateStats();\r\n  }\r\n\r\n  updateStats() {\r\n    this.covidService.getTodayStats()\r\n      .then((stats) => {\r\n        this.setState({\r\n          cases: stats.cases,\r\n          deaths: stats.deaths,\r\n          recovered: stats.recovered,\r\n          loading: false\r\n        })\r\n      });\r\n\r\n      this.covidService.getYesterdayStats()\r\n      .then((stats) => {\r\n        this.setState({\r\n          ycases: stats.cases,\r\n          ydeaths: stats.deaths,\r\n          yrecovered: stats.recovered\r\n        })\r\n      })  \r\n  }\r\n\r\n  render() {\r\n    const { cases, deaths, recovered, loading, ycases, ydeaths, yrecovered, } = this.state;\r\n\r\n    if (loading) {\r\n      return ( <CircularProgress /> );\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Paper variant=\"outlined\">\r\n      <Typography variant=\"h6\" component=\"h3\" style={{padding: 1 + 'em'}}>\r\n      Number of reported incidents: {cases} <small style={{fontSize: '0.6em'}}>{parseFloat(cases/ycases).toFixed(2)}%</small>\r\n      </Typography>\r\n      {/* <Typography component=\"p\">+20%</Typography> */}\r\n      </Paper>\r\n \r\n\r\n      <Paper variant=\"outlined\">\r\n      <Typography variant=\"h6\" component=\"h3\" style={{padding: 1 + 'em'}}>\r\n      Number of recorded reports to the police: {deaths} <small style={{fontSize: '0.6em'}}>{parseFloat(deaths/ydeaths).toFixed(2)}%</small>\r\n      </Typography>\r\n      {/* <Typography component=\"p\">+20%</Typography> */}\r\n      </Paper>\r\n      <Paper variant=\"outlined\">\r\n      <Typography variant=\"h6\" component=\"h3\" style={{padding: 1 + 'em'}}>\r\n      Number of messages on social networks: {recovered} <small style={{fontSize: '0.6em'}}>{parseFloat(recovered/yrecovered).toFixed(2)}%</small>\r\n      </Typography>\r\n      {/* <Typography component=\"p\">+20%</Typography> */}\r\n      </Paper>\r\n      <Paper variant=\"outlined\">\r\n        <Typography variant=\"h6\" component=\"h3\" style={{padding: 1 + 'em'}}>\r\n          Dynamics of reported incidents\r\n        </Typography>  \r\n        <MyChart />\r\n      </Paper>        \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, {Fragment} from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  Circle\r\n} from \"react-google-maps\";\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst Map = props => {\r\n\r\n    let iconMarker = new window.google.maps.MarkerImage(\r\n      \"https://lh3.googleusercontent.com/bECXZ2YW3j0yIEBVo92ECVqlnlbX9ldYNGrCe0Kr4VGPq-vJ9Xncwvl16uvosukVXPfV=w300\",\r\n      null, /* size is determined at runtime */\r\n      null, /* origin is 0,0 */\r\n      null, /* anchor is bottom center of the scaled image */\r\n      new window.google.maps.Size(32, 32)\r\n    );\r\n\r\n    let history = useHistory();\r\n\r\n    const onMarkerClick = (evt) => {\r\n      // console.log(evt);\r\n      history.push({\r\n        pathname: \"/report\",\r\n        state: { lat: evt.latLng.lat(), lng: evt.latLng.lng() }\r\n      });\r\n    };\r\n\r\n    return (\r\n      <GoogleMap\r\n        defaultZoom={props.zoom}\r\n        defaultCenter={props.center}\r\n        onClick={onMarkerClick} \r\n      >\r\n        \r\n              <Marker \r\n                position={{\r\n                  lat: props.latitude, // 48.9185051,\r\n                  lng: props.longitude // 24.7152683\r\n                }}\r\n              />\r\n\r\n\r\n        {props.sanitizers.map(sanitizer => {\r\n          return (\r\n            <Fragment key={sanitizer.id}>\r\n              <Marker\r\n                icon={iconMarker} \r\n                title={sanitizer.title} \r\n                position={{\r\n                  lat: parseFloat(sanitizer.latitude),\r\n                  lng: parseFloat(sanitizer.longitude)\r\n                }}\r\n              /> \r\n            </Fragment>\r\n          );\r\n        })}\r\n\r\n        {props.places.map(place => {\r\n          return (\r\n            <Fragment key={place.id}>\r\n\r\n              {/* <Marker\r\n                position={{\r\n                  lat: parseFloat(place.latitude),\r\n                  lng: parseFloat(place.longitude)\r\n                }}\r\n              /> */}\r\n              {place.circle && <Circle\r\n                defaultCenter={{\r\n                  lat: parseFloat(place.latitude),\r\n                  lng: parseFloat(place.longitude)\r\n                }}\r\n                radius={place.circle.radius}\r\n                options={place.circle.options}\r\n              />}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </GoogleMap>\r\n    );\r\n}\r\n\r\nexport default withScriptjs(withGoogleMap(Map));\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport covidService from '../../services/covid.service';\r\n\r\nexport default class Settings extends Component {\r\n\r\n  covidService = new covidService();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '' };\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    this.setState({username: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\r\n        <h1>Моніторинг осередків підпалювання</h1>\r\n        <Typography variant=\"h6\">\r\n        <p>\r\n        Мета проєкту – \r\n        </p>\r\n\r\n        <p>Розробник: \r\n          <br />\r\n          Возняк Мирослав - розробка додатку та сайту\r\n        </p>\r\n\r\n        </Typography>\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n  \r\n  \r\n  export default function DenseTable() {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <TableContainer component={Paper}>\r\nIf you see unconscious citizens burning leaves…\r\nIt is difficult to find a person who would like to breathe smoke from smoldering leaves or burning steppe. Many would like these violations to stop, but they do not know how to achieve this.\r\nWhen starting a fight against fires in your community, you need to know that the law is on your side anyway.       \r\n      </TableContainer>\r\n    );\r\n  }\r\n  \r\n  ","import { makeStyles } from '@material-ui/core/styles';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// import covidService from '../../services/covid.service';\r\n\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import Share from 'material-ui-share';\r\nimport ReactShareSocial from 'react-share-social';\r\n\r\nimport {\r\n    Button,\r\n    Field,\r\n    Form,\r\n    RadioGroup,\r\n    Select,\r\n  } from 'react-form-package';\r\n\r\n  async function handleOnClick(state) {\r\n    try {\r\n      // this.covidService.postProblem\r\n      let url = '';\r\n      let method = '';\r\n      // console.log(state.data);\r\n      if (state.data.id) {\r\n        url = process.env.REACT_APP_BACKEND_API + '/area/' + state.data.id;\r\n        method = \"PATCH\";\r\n      } else {\r\n        url = process.env.REACT_APP_BACKEND_API + '/area';\r\n        method = \"POST\";\r\n      }\r\n      \r\n      const response = await fetch(url, {\r\n      method: method,\r\n        headers: {\r\n          'Content-Type': 'application/json; charset=utf-8',\r\n        },\r\n        body: JSON.stringify(state.data)\r\n      });      \r\n      alert('Thanks, problem is reported');\r\n    } catch(error) {\r\n      alert('Please try again');\r\n    }\r\n  } \r\n\r\n  export default function DenseTable() {\r\n    \r\n    const [state, setState] = useState([]);\r\n\r\n    const handleOnLoad = async (record_id) => {      \r\n      try {\r\n        const response = await fetch(\r\n          process.env.REACT_APP_BACKEND_API + '/area/' + record_id\r\n        );\r\n        const data = await response.json();        \r\n        console.log(response); \r\n        setState({\r\n          loading: true,\r\n          response: data\r\n        });\r\n      } catch(error) {\r\n        alert('Please try again');\r\n      }\r\n    } \r\n\r\n    const location = useLocation();\r\n    var lat = location.state ? location.state.lat : 0;\r\n    var lng = location.state ? location.state.lng : 0;\r\n    var record_id = location.state ? location.state.id : 0;\r\n    \r\n    useEffect(() => {\r\n      handleOnLoad(record_id);   \r\n    }, []);\r\n\r\n    const row = state.response;\r\n\r\n    if (!state.loading) {\r\n      return ( <CircularProgress /> );\r\n    }\r\n\r\n    if (!lat) lat = row.lat;\r\n    if (!lng) lng = row.lng;\r\n    if (!row.description) row.description = location.state ? location.state.description : '';\r\n    \r\n    return (\r\n      <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\r\n        <h3>\r\n        \r\n        {/* <Share\r\n          title='This is a cool title'\r\n          text='Oh you want some text for this share component'\r\n          url='https://developers.google.com/web/updates/2016/09/navigator-share'\r\n        /> */}\r\n\r\n          {/* <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            // onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            // className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <ShareIcon />\r\n          </IconButton> */}\r\n\r\n  <ReactShareSocial \r\n     url =\"wildfirealert.com\"\r\n     socialTypes={['facebook','twitter']}\r\n   />\r\n\r\n          Report incident </h3>\r\n        <Form\r\n          validate\r\n        >\r\n          <Field type=\"hidden\" id=\"id\" name=\"id\" value={row.id} />\r\n          <div>\r\n            <div>Description of the problem</div>\r\n            <Field rows=\"10\" cols=\"40\" type=\"textarea\" id=\"description\" name=\"description\" placeholder=\"Detailed description of the problem\" value={row.description} />\r\n          </div>\r\n          <div>\r\n            <div>Date and time of report</div>\r\n            <Field type=\"datetime-local\" id=\"datetime-local\" />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <div>Lat</div>\r\n            <Field type=\"text\" id=\"lat\" name=\"lat\" value={lat} />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <div>Lng</div>\r\n            <Field type=\"text\" id=\"lng\" name=\"lng\" value={lng} />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <div>Address of incident</div>\r\n            <Field type=\"text\" id=\"address\" name=\"address\" value={row.address} />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <div>Contact phone</div>\r\n            <Field type=\"tel\" id=\"tel\" value={row.phone} />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <div>The level of pollution by impact on health</div>\r\n            <Select id=\"level\" type=\"select\" name=\"level\" value={row.level}>\r\n              <option disabled value=\"\">--- Choice ---</option>\r\n              <option value=\"1\">Low</option>\r\n              <option value=\"2\">Medium</option>\r\n              <option value=\"3\">High</option>\r\n            </Select>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <div>Report status</div>\r\n            <RadioGroup type=\"radio\" id=\"radio\">\r\n              <input value=\"1\" type=\"radio\" name=\"radio\" id=\"radio1\" checked />\r\n              The problem has been reported\r\n              <br />\r\n              <input value=\"2\" type=\"radio\" name=\"radio\" id=\"radio2\" />\r\n              The problem has been reported to the police\r\n              <br />\r\n              <input value=\"3\" type=\"radio\" name=\"radio\" id=\"radio3\" />\r\n              The problem is fixed\r\n            </RadioGroup>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            {/* <Button id=\"submit\" type=\"submit\" onClick={(state) => console.log(state)}>Зафіксувати</Button> */}\r\n            <Button id=\"submit\" type=\"submit\" onClick={(state) => handleOnClick(state)}>Report</Button>\r\n          </div>\r\n        </Form>\r\n        </Paper>\r\n        );   \r\n \r\n  }\r\n  \r\n  ","import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst BasisPaginationGrid = props => {\r\n\r\n    const [state, setState] = useState([]);\r\n\r\n    function getStatus(val) {\r\n        switch (val) {\r\n            default: case 1: return 'Recorded';\r\n            case 2: return 'Reported';\r\n            case 3: return 'Removed';\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {        \r\n        const response = await fetch(\r\n          process.env.REACT_APP_BACKEND_API + '/area'\r\n        );\r\n        const areas = await response.json();\r\n        setState({  loading: true,\r\n                    volume_map_data:                       \r\n                        areas.map(vol => ({\r\n                          id: vol.id,\r\n                          title: vol.description,\r\n                          address: vol.address,\r\n                          phone: vol.phone,\r\n                          level: vol.level,\r\n                          status_id: getStatus(vol.status_id),\r\n                        }))   \r\n        });\r\n    }   \r\n\r\n    useEffect(() => {\r\n        fetchData();   \r\n    }, []);\r\n    \r\n    // console.log('states:' + state);\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'title', headerName: 'Title', width: 230 },\r\n    { field: 'address', headerName: 'Address', width: 130 },\r\n    { field: 'phone', headerName: 'Phone', width: 130 },\r\n    { field: 'level', headerName: 'Level', type: 'number', width: 90 },\r\n    { field: 'status_id', headerName: 'Status', type: 'number', width: 130 },\r\n    {\r\n        field: \"\",\r\n        headerName: \"Action\",\r\n        sortable: false,\r\n        width: 150,\r\n        disableClickEventBubbling: true,\r\n        renderCell: (params: CellParams) => {\r\n          const onClick = () => {\r\n            const api: GridApi = params.api;\r\n            const fields = api\r\n              .getAllColumns()\r\n              .map((c) => c.field)\r\n              .filter((c) => c !== \"__check__\" && !!c);\r\n            const thisRow = {};\r\n    \r\n            fields.forEach((f) => {\r\n              thisRow[f] = params.getValue(f);\r\n            });\r\n\r\n            let data = thisRow; // JSON.stringify(thisRow, null, 4));\r\n            // console.log(data);\r\n            history.push({\r\n              pathname: \"/report\",\r\n              state: { id: data.id }\r\n            });\r\n\r\n          };\r\n    \r\n          return <Button onClick={onClick}>Update</Button>;\r\n        }\r\n      },    \r\n    // {\r\n    //   field: 'fullName',\r\n    //   headerName: 'Full name',\r\n    //   description: 'This column has a value getter and is not sortable.',\r\n    //   sortable: false,\r\n    //   width: 160,\r\n    //   valueGetter: (params) =>\r\n    //     `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n    // },\r\n  ];\r\n\r\n  const rows = state.volume_map_data;\r\n  let history = useHistory();\r\n   \r\n  if (!state.loading) {\r\n    return ( <CircularProgress /> );\r\n  }\r\n\r\n    return (\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid pageSize={20} rowsPerPageOptions={[5, 10, 20]} pagination rows={rows} columns={columns} />\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default BasisPaginationGrid;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from \"react-router\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '136ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\n\r\nexport default function AlignItemsList() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState([]);\r\n\r\n  const fetchData = async () => {        \r\n    const response = await fetch(\r\n      process.env.REACT_APP_BACKEND_API + '/report'\r\n    );\r\n    const areas = await response.json();\r\n    setState({  loading: true,\r\n                volume_map_data:                       \r\n                    areas.map(vol => ({\r\n                      id: vol.id,\r\n                      description: vol.description,\r\n                      address: vol.address,\r\n                      author: vol.author,\r\n                      avatar: vol.avatar,\r\n                      source: vol.source,\r\n                      orig_date: vol.orig_date\r\n                    }))   \r\n    });\r\n  }\r\n\r\n  let history = useHistory();\r\n  const onClick = (desc) => {\r\n    // console.log();\r\n    history.push({\r\n      pathname: \"/report\",\r\n      state: { description: desc } \r\n    });\r\n    // lat: evt.latLng.lat(), lng: evt.latLng.lng()\r\n    // return alert('Зафіксовано в базі');\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();   \r\n  }, []);\r\n\r\n  const rows = state.volume_map_data;\r\n\r\n  if (!state.loading) {\r\n      return ( <CircularProgress /> );\r\n  }\r\n\r\n  return (\r\n  <List className={classes.root}>\r\n\r\n  {rows.map(row => {\r\n          return (\r\n            <>\r\n          <ListItem alignItems=\"flex-start\" >\r\n            <ListItemAvatar>\r\n              <Avatar alt={row.author} src={row.avatar} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={row.orig_date}\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    className={classes.inline}\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {row.author} \r\n                  </Typography>\r\n                  &nbsp;\" — {row.description}\"\r\n                </React.Fragment>\r\n              }\r\n            />\r\n            {/* ()=>{this.handleRemove(id)} */}\r\n            {/* <Button onClick={this.onClick} value={row.description}>Зафіксувати</Button> */}\r\n            <Button onClick={() => {onClick(row.description)}} >Report</Button>\r\n          </ListItem>\r\n          <Divider variant=\"inset\" component=\"li\" />       \r\n          </>   \r\n          );\r\n        })}\r\n\r\n  </List>);\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport DailyStats from '../daily-stats/daily-stats'\r\nimport Map from '../map/map'\r\nimport Settings from '../settings/settings'\r\nimport Help from '../help/help'\r\nimport Report from '../report/report'\r\nimport DataList from '../list/list'\r\nimport SocialList from '../sociallist/sociallist'\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { usePosition } from 'use-position';\r\n\r\n\r\n// const sanitizers = [\r\n//   {\r\n//     id: 1,\r\n//     title: \"Стометрівка\",\r\n//     latitude: \"48.92\",\r\n//     longitude: \"24.71\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     title: \"Плаза\",\r\n//     latitude: \"48.92\",\r\n//     longitude: \"24.70\",   \r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     title: \"Центр\",\r\n//     latitude: \"48.91\",\r\n//     longitude: \"24.705\",   \r\n//   },\r\n//   {\r\n//     id: 4,\r\n//     title: \"Стометрівка 2\",\r\n//     latitude: \"48.92\",\r\n//     longitude: \"24.71\",\r\n//   },\r\n// ];\r\n\r\n// updateMap() {\r\n//   this.covidService.getMap()\r\n//     .then((areas) => {\r\n//       this.setState({\r\n//         volume_map_data: [\r\n//           {\r\n//             data: areas.map(vol => ({\r\n//               id: vol.id,\r\n//               name: vol.title,\r\n//               lat: vol.lat,\r\n//               lng: vol.lng,\r\n//               circle: {\r\n//                 radius: vol.radius,\r\n//                 options: {\r\n//                   strokeColor: vol.color\r\n//                 }\r\n//               }\r\n//             }))  \r\n//           }\r\n//         ]\r\n//       })\r\n//     });\r\n// }\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction Red() {\r\n  return <>\r\n  <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\r\n  <h3>Червона зона</h3>\r\n<Typography component={'div'}>Заборонено:\r\n<ul>\r\n<li>робота громадського транспорту</li>\r\n<li>відвідування освітніх установ</li>\r\n<li>робота ТРЦ, кафе і ресторанів</li>\r\n<li>обмеження зеленої, жовтої та поморанчевої зон зберігаються</li>\r\n</ul>\r\n</Typography>\r\n</Paper>\r\n  </>;\r\n}\r\n\r\nfunction Orange() {\r\n  return <>\r\n  <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\r\n  <h3>Помаранчева зона</h3>\r\n<Typography component={'div'}>Обмеження:\r\n<ul>\r\n<li>діяльність закладів розміщення (хостели, туристичні бази тощо), окрім готелів</li>\r\n<li>діяльність розважальних закладів, ресторанів у нічний час</li>\r\n<li>планові госпіталізації в лікарнях</li>\r\n<li>спортзали, фітнес-центри, заклади культури</li>\r\n<li>прийом нових змін в дитячі табори</li>\r\n<li>обмеження для масових заходів: 1 людина на 20 кв. м. та не більше 100 людей</li>\r\n<li>обмеження жовтої і зеленої зон зберігаються</li>\r\n</ul>\r\n</Typography>\r\n  </Paper>\r\n  </>;\r\n}\r\n\r\nfunction Yellow() {\r\n  return <>\r\n  <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\r\n  <h3>Червона зона</h3>\r\n<Typography component={'div'}>Заборонено:\r\n<ul>\r\n<li>відвідування установ соціального захисту, в яких перебувають люди похилого віку, крім тих, що надають послуги кризово</li>\r\n<li>на вході до закладів чи заходів потрібно розмістити інформацію про можливу кількість відвідувачів. Контроль має здійснювати власник приміщення або організатор події</li>\r\n<li>обмеження зеленої зони зберігаються</li>\r\n</ul>\r\n</Typography>\r\n</Paper>\r\n  </>;\r\n}\r\n\r\nfunction Green() {\r\n  return <>\r\n  <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\r\n  <h3>Червона зона</h3>\r\n<Typography component={'div'}>Заборонено:\r\n<ul>\r\n<li>перебування у громадських будівлях в масках або респіраторах</li>\r\n<li>проведення масових заходів: не більше 1 людини на 5 квадратних метрів</li>\r\n<li>кінотеатри із заповненістю на 50%</li>\r\n<li>перевезення пасажирів тільки в межах сидячих місць</li>\r\n<li>відвідування закладів дошкільної, шкільної, позашкільної та спеціалізованої освіти, якщо на самоізоляції понад 50% дітей та персоналу закладу</li>\r\n</ul>\r\n</Typography>\r\n</Paper>\r\n  </>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n  const { icon, primary, to } = props;\r\n\r\n  const CustomLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef((linkProps, ref) => (\r\n        <Link ref={ref} to={to} {...linkProps} />\r\n      )),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={CustomLink}>\r\n        <ListItemIcon>{icon}</ListItemIcon> \r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\nexport default function MyAppBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = useState([])\r\n  const [status, setStatus] = useState([]);\r\n  const [sanitizer, setSanitizer] = useState([]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const watch = true;\r\n  const {\r\n    latitude,\r\n    longitude,\r\n  } = usePosition(watch);\r\n  \r\n  const fetchData = async () => {\r\n        \r\n    const response = await fetch(\r\n      process.env.REACT_APP_BACKEND_API + '/area'\r\n    );\r\n    const areas = await response.json();\r\n    setState({\r\n                volume_map_data: \r\n                  \r\n                    areas.map(vol => ({\r\n                      id: vol.id,\r\n                      title: vol.title,                         \r\n                      latitude: vol.lat,\r\n                      longitude: vol.lng,\r\n                      circle: {\r\n                        radius: vol.radius,\r\n                        options: {\r\n                          strokeColor: '#' + vol.color\r\n                        }\r\n                      }\r\n                    }))   \r\n    });    \r\n    \r\n    // console.log(state.volume_map_data);      \r\n};\r\n\r\nconst fetchSanitizer = async () => {\r\n        \r\n  const response = await fetch(\r\n    process.env.REACT_APP_BACKEND_API + '/sanitizer'\r\n  );\r\n  const sanitizers = await response.json();\r\n  setSanitizer({\r\n              volume_map_sanitizer:  \r\n                  sanitizers.map(vol => ({\r\n                    id: vol.id,\r\n                    title: vol.title,                         \r\n                    latitude: vol.lat,\r\n                    longitude: vol.lng,\r\n                  }))   \r\n  });      \r\n  // console.log(state.volume_map_sanitizer);      \r\n};\r\n\r\n// async function getValue(value) {\r\n//   const response = await fetch(\r\n//     process.env.REACT_APP_BACKEND_API + '/setting/' + value\r\n//   );\r\n//   const value = await response.json();\r\n// }\r\n\r\nconst initData = async () => {\r\n        \r\n  const response = await fetch(\r\n    process.env.REACT_APP_BACKEND_API + '/setting/status_id'\r\n  );\r\n  const status_id = await response.json();\r\n\r\n  // const status_id = getValue('status_id');\r\n\r\n  const response_orange = await fetch(\r\n    process.env.REACT_APP_BACKEND_API + '/setting/orange'\r\n  );\r\n  const orange = await response_orange.json();\r\n\r\n  let type = 3;\r\n  let status_name = '';\r\n  let status_link = '';\r\n  let content = '';\r\n  switch (status_id.value) {\r\n      case \"1\": type = \"error\"; status_name = \"червоній\"; status_link = \"red\"; content = ''; break;\r\n      case \"2\": type = \"warning\";  status_name = \"помаранчевій\"; status_link = \"orange\"; content = orange; break;\r\n      case \"3\": type = \"info\"; status_name = \"жовтій\"; status_link = \"yellow\"; break;\r\n      case \"4\": default: type = \"success\"; status_name = \"зеленій\"; status_link = \"green\"; break;\r\n  }\r\n  setStatus({\r\n    status_id: status_id.value,\r\n    type: type,\r\n    name: status_name,\r\n    link: status_link\r\n  });      \r\n};\r\n\r\n  useEffect(() => {\r\n     initData();   \r\n     fetchData();   \r\n     fetchSanitizer();   \r\n    }, []);\r\n\r\n    // console.log('stat ', status.type_id);      \r\n\r\n  // const [volume_map_sanitizer, fetchSanitizer] = useState(0);\r\n\r\n  const google_map_key = process.env.GOOGLE_MAP_KEY;\r\n  // console.log(google_map_key);\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n          Wildfire Alert System\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Router>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List onClick={handleDrawerClose}  >\r\n          <ListItemLink primary={'Information'} icon={<EqualizerIcon />} to='/' />\r\n          <ListItemLink primary={'Recommendations'} icon={<HelpIcon />} to='/help' />\r\n          <ListItemLink primary={'Map'} icon={<MapIcon />} to='/map' />\r\n          <ListItemLink primary={'Report'} icon={<MailIcon />} to='/report' />\r\n          <ListItemLink primary={'Incidents List'} icon={<ListIcon />} to='/list' />\r\n          <ListItemLink primary={'Social Networks'} icon={<ListAltIcon />} to='/social' />\r\n          <ListItemLink primary={'About'} icon={<InboxIcon />} to='/settings' />\r\n        </List>\r\n\r\n        <Divider />\r\n        {/* <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List> */}\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n\r\n        <Alert severity={status.type}>\r\n        <AlertTitle>ALERT</AlertTitle>\r\n      Ivano-Frankivsk - A large number of fires of dry grass were recorded <Link to={status.link}>See our recommendations</Link></Alert>\r\n\r\n        <Switch>\r\n          <Route path=\"/red\">\r\n            <Red />\r\n          </Route>\r\n          <Route path=\"/orange\">\r\n            <Orange />\r\n          </Route>\r\n          <Route path=\"/yellow\">\r\n            <Yellow />\r\n          </Route>\r\n          <Route path=\"/green\">\r\n            <Green />\r\n          </Route>           \r\n          <Route path=\"/settings\">\r\n            <Settings />\r\n          </Route>\r\n          <Route path=\"/help\">\r\n            <Help />\r\n          </Route>\r\n          <Route path=\"/report\">\r\n            <Report />\r\n          </Route>\r\n          <Route path=\"/list\">\r\n            <DataList />\r\n          </Route>\r\n          <Route path=\"/social\">\r\n            <SocialList />\r\n          </Route>\r\n          <Route path=\"/map\">\r\n          <Map \r\n    center={{ lat: 48.92, lng: 24.71 }}\r\n    zoom={12}\r\n    latitude={latitude} \r\n    longitude={longitude} \r\n    places={state.volume_map_data}\r\n    sanitizers={sanitizer.volume_map_sanitizer} \r\n    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBLlwasnMbQP4pp1Qx0poPnCqnJ_C1lPhk\"  \r\n    loadingElement={<div style={{ height: `100%` }} />}\r\n    containerElement={<div style={{ height: `800px` }} />}\r\n    mapElement={<div style={{ height: `100%` }} />}\r\n  />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <DailyStats />\r\n          </Route>    \r\n        </Switch>\r\n      \r\n        \r\n      </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport MyAppBar from '../app-bar/app-bar'\r\n\r\nexport default class App extends Component { \r\n  render()  {  \r\n    return (\r\n      <>\r\n        <MyAppBar />\r\n      </>\r\n    )\r\n  }\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\n// importScripts(\"https://js.pusher.com/beams/service-worker.js\");\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  \r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import * as PusherPushNotifications from '@pusher/push-notifications-web'\r\n\r\n// const beamsClient = new PusherPushNotifications.Client({\r\n//     instanceId: '1927be8c-d256-4d48-b1a1-c823d23c3fba',\r\n//   });\r\n\r\n// beamsClient.start()\r\n//     .then(() => beamsClient.addDeviceInterest('hello'))\r\n//     .then(() => console.log('Successfully registered and subscribed!'))\r\n//     .catch(console.error);\r\n\r\nReactDOM.render(<App />, document.getElementById('root') );\r\nserviceWorker.register();\r\n"],"sourceRoot":""}